[alias]
        aa      = add -A                                # stage all unstaged
        ca      = !git add -A && git commit -av         # all, verbose
        cam     = !git add -A && git commit -am         # all, with msg
        caa     = commit -a -v --amend                  # all, verbose, amend
        caan    = commit -a -v --amend --no-edit        # all, verbose, amend, no-edit
        caam    = commit -a -m --amend                  # all, with msg, amend

        co      = checkout                              # checkout
        cob     = checkout -b                           # checkout, new branch
        cm      = checkout master                       # checkout master

        b       = branch
        l       = log
        cl      = "!f() { git log --no-merges --format='%h - %ar - %cn - %s' $1 --; }; f" # changelog
        p       = push
        rbm     = rebase master

        # checkout, update and clean up master
        cmup    = !git checkout master && git pull --rebase --prune && git submodule update --init --recursive && git delete-merged-branches

        # list branches sorted by last modified
        ls-branch = !git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'

        # copy current branch name
        cbn     = !$DOTFILES/bin/git-copy-branch-name

        # colorful graph log
        # https://medium.com/@payload.dd/thanks-for-the-git-st-i-will-use-this-4da5839a21a4
        grog    = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

        # list aliases
        la      = !git config -l | grep alias | cut -c 7-

        # create a pristine working dir
        pristine= !git reset --hard && git clean -dfx

        # push current branch to remote with same name
        puo     = push -u origin HEAD

        # show remote origin info
        rv      = remote -v show origin

        # short status
        sb      = status -sb

        # undo last commit without loses changes
        undo    = reset --soft HEAD^
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
[core]
        excludesfile = ~/.gitignore
        editor = vim
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[diff]
        tool = icdiff
        # A nice little github-like colorful, split diff right in the console.
        # via http://owen.cymru/github-style-diff-in-terminal-with-icdiff/
[difftool]
        prompt = false
[difftool "icdiff"]
        cmd = /usr/local/bin/icdiff --line-numbers $LOCAL $REMOTE
[status]
        showUntrackedFiles = all
        # Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
        # https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles
[help]
        autoCorrect = 1
[push]
        default = simple
        # "push the current branch back to the branch whose changes are usually integrated into the current branch"
        # "refuse to push if the upstream branchâ€™s name is different from the local one"
        # https://git-scm.com/docs/git-config#git-config-pushdefault
[user]
	name = Jon Erickson
	email = jon@ericksn.com
