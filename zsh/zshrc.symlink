# shortcut to oh-my-zsh root
export ZSH=$HOME/.oh-my-zsh

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=$HOME/dev

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a $HOME/.localrc ]]
then
  # echo "› source ${HOME}/.localrc"
  source $HOME/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# load path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything except for path, completion and aliases files
for file in ${${${config_files:#*/path.zsh}:#*/completion.zsh}:#*/aliases.zsh}
do
  source $file
done

# load oh-my-zsh, includes autocomplete
source $ZSH/oh-my-zsh.sh

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

# load alias files last - to give chance for overriding any introduced by oh-my-zsh
for file in ${(M)config_files:#*/aliases.zsh}
do
  source $file
done

# auto-load environment based upon ssid
wireless_network=$(ssid)
if [[ "$wireless_network" == "$NORD_SSID" ]]; then
    echo "› ssid: $wireless_network, applying nordstrom config"
    proxy-nordstrom
    git-config-nordstrom
    gradle-config-nordstrom
elif pgrep "$NORD_VPN_CLIENT_APP" > /dev/null; then
    echo "› ssid: $wireless_network (vpn), applying nordstrom config"
    proxy-nordstrom
    git-config-nordstrom
    gradle-config-nordstrom
else
    echo "› ssid: $wireless_network, applying default config"
    proxy-default
    git-config-default
    gradle-config-default
fi

# cleanup
unset config_files wireless_network
